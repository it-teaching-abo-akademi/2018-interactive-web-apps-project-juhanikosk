{"version":3,"sources":["components/CreationModal.jsx","components/Portfolio.jsx","App.js","serviceWorker.js","index.js"],"names":["CreationModal","state","name","_this2","this","react_default","a","createElement","className","tabIndex","role","props","title","type","onClick","close","aria-hidden","onChange","e","setState","target","value","placeholder","helpText","onCreate","disabled","length","Component","Portfolio","showStockCreationModal","stocks","map","stock","key","deletePortfolio","CreationModal_CreationModal","addStock","App","portfolios","showCreationModal","portfolioId","forEach","port","id","portfolio","getNewPortolioId","Object","toConsumableArray","concat","stockName","push","index","Portfolio_Portfolio","filter","addStockToPortfolio","createNewPortfolio","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35ec2ff4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nexport default class CreationModal extends Component {\r\n    state = {\r\n        'name': ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" tabIndex=\"-1\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">{this.props.title}</h5>\r\n                            <button type=\"button\" className=\"close\" onClick={this.props.close}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <input\r\n                                onChange={(e) => this.setState({'name': e.target.value})}\r\n                                className=\"form-control\"\r\n                                placeholder={this.props.helpText} />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => {\r\n                                    this.props.onCreate(this.state.name);\r\n                                    this.props.close();\r\n                                }}\r\n                                disabled={this.state.name.length < 4}>\r\n                                Create Portfolio\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport CreationModal from './CreationModal.jsx';\r\n\r\n\r\nexport default class Portfolio extends Component {\r\n    state = {\r\n        'showStockCreationModal': false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"portfolio col-12 col-sm-6 px-2 mt-2\">\r\n                <div className=\"p-2 border\">\r\n                    <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <p className=\"font-weight-bold mx-2 mb-2\">{this.props.name}</p>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"stocks mb-3 mx-1\">\r\n                                {this.props.stocks.map((stock) => <p key={stock}>{stock}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">'\r\n                            <button className=\"btn btn-success btn-sm\" \r\n                                    onClick={() => this.setState({'showStockCreationModal': true})}>\r\n                                Add stock\r\n                            </button>\r\n                            <button className=\"btn btn-danger btn-sm float-right\" onClick={this.props.deletePortfolio}>\r\n                                Delete a portfolio\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.showStockCreationModal\r\n                    ? <CreationModal\r\n                        title=\"Create a new stock\"\r\n                        helpText=\"Write the abbreviation of the stock...\"\r\n                        close={() => this.setState({'showStockCreationModal': false})}\r\n                        onCreate={(name) => this.props.addStock(name)} />\r\n                    : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Portfolio from './components/Portfolio';\nimport CreationModal from './components/CreationModal';\n\n\nclass App extends Component {\n    state = {\n        'portfolios': [],\n        'showCreationModal': false\n    }\n\n    getNewPortolioId() {\n        let portfolioId = 0;\n        this.state.portfolios.forEach((port) => {\n            if (port.id >= portfolioId) {\n                portfolioId = port.id + 1\n            }\n        });\n\n        return portfolioId;\n    }\n\n    createNewPortfolio(name) {\n        const portfolio = {\n            'name': name,\n            'id': this.getNewPortolioId(),\n            'stocks': []\n        };\n\n        this.setState({'portfolios': [...this.state.portfolios, portfolio]});\n    }\n\n    addStockToPortfolio(stockName, id) {\n        const portfolios = this.state.portfolios.map((port) => {\n            if (port.id === id) {\n                port.stocks.push(stockName);\n            }\n\n            return port;\n        });\n\n        this.setState({'portfolios': portfolios});\n    }\n\n    render() {\n        return (\n            <div className=\"app-container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <button className=\"btn btn-success mt-2 mx-2 mb-0\"\n                                onClick={() => this.setState({'showCreationModal': true})}\n                                disabled={this.state.portfolios.length >= 10}>\n                            Add new portfolio\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row mx-0\">\n                    {this.state.portfolios.length\n                        ? this.state.portfolios.map((portfolio, index) => \n                            <Portfolio\n                                key={index}\n                                name={portfolio.name}\n                                stocks={portfolio.stocks}\n                                deletePortfolio={() =>\n                                    this.setState({\n                                        'portfolios': this.state.portfolios.filter((port) => port.id !== portfolio.id)\n                                    })}\n                                addStock={(stockName) => this.addStockToPortfolio(stockName, portfolio.id)}\n                            />\n                        )\n                        : <div className=\"col-12 px-2\">\n                            <p className=\"mx-1 my-2\">No portfolios made</p>\n                        </div>}\n                </div>\n                {this.state.showCreationModal\n                    ? <CreationModal\n                        title=\"Create a new portfolio\"\n                        helpText=\"Write the name of the portfolio...\"\n                        close={() => this.setState({'showCreationModal': false})}\n                        onCreate={(name) => this.createNewPortfolio(name)} />\n                    : null}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}